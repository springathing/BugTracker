@model mblyakher_bugtracker.Models.CodeFirst.Ticket

@{
    ViewBag.Title = "Edit";
}

<header class="page-header">
        <div class="container-fluid">
            <h2 class="no-margin-bottom">Edit Ticket</h2>
        </div>
    </header>
    <div class="container-fluid">
        <div class="row bg-white has-shadow" style="margin-top:25px; margin-bottom:25px;">
            <div class="col-lg-12" style="padding:10px;">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Ticket</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                       
                            @Html.HiddenFor(model => model.AssignToUserId)
                            @Html.HiddenFor(model => model.OwnerUserId)
                            @Html.HiddenFor(model => model.Created)
                            <div class="form-group">
                                @Html.HiddenFor(model => model.ProjectId)
                                @*<div class="col-md-10">
                                    @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                                </div>*@
                            </div>
                        
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.OwnerUserId, "Owner", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("OwnerUserId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.AssignToUserId, "Assigned To", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(Model => Model.AssignToUserId, ViewBag.AssignToUserId as SelectList, null, htmlAttributes: new { @class = "form-control", onchange = "SelectedIndexChanged()" })
                                    @*@Html.DropDownList("AssignToUserId", null, htmlAttributes: new { @class = "form-control" })*@
                                    @Html.ValidationMessageFor(model => model.AssignToUserId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>

<script type="text/javascript">
  function SelectedIndexChanged() {
       //Form post
       document.getElementById("TicketStatusId").selectedIndex = "1"; // assigned
   }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
